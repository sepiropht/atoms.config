(function() {
  var Project, db, utils;

  Project = require('../lib/project');

  utils = require('./utils');

  db = require('../lib/db');

  db.updateFilepath(utils.dbPath());

  describe("Project", function() {
    beforeEach(function() {});
    it("recieves default properties", function() {
      var project, properties;
      properties = {
        title: "Test",
        paths: ["/Users/"]
      };
      project = new Project(properties);
      return expect(project.props.icon).toBe('icon-chevron-right');
    });
    it("does not validate without proper properties", function() {
      var project, properties;
      properties = {
        title: "Test"
      };
      project = new Project(properties);
      return expect(project.isValid()).toBe(false);
    });
    it("automatically updates it's properties", function() {
      var project, props;
      props = {
        title: "testAutomaticUpdates",
        paths: ["/Users/test-automatic-updates"]
      };
      project = new Project(props);
      project.save();
      spyOn(project, 'updateProps').andCallThrough();
      expect(project.props.icon).toBe('icon-chevron-right');
      props.icon = 'icon-test';
      db.add(props);
      return project.onUpdate(function() {
        expect(project.updateProps).toHaveBeenCalled();
        return expect(project.props.icon).toBe('icon-test');
      });
    });
    return describe("::save", function() {
      it("does not save if not valid", function() {
        var project;
        project = new Project();
        return expect(project.save()).toBe(false);
      });
      it("only saves settings that isn't default", function() {
        var project, props;
        props = {
          title: 'Test',
          paths: ['/Users/test']
        };
        project = new Project(props);
        return expect(project.getPropsToSave()).toEqual(props);
      });
      it("saves project if _id isn't set", function() {
        var project;
        project = new Project({
          title: 'saveProjectIfIDIsntSet',
          paths: ['/Test/']
        });
        spyOn(db, 'add').andCallThrough();
        spyOn(db, 'update').andCallThrough();
        project.save();
        expect(db.add).toHaveBeenCalled();
        return expect(db.update).not.toHaveBeenCalled();
      });
      return it("updates project if _id is set", function() {
        var props;
        props = {
          title: 'updateProjectIfIDIsSet',
          paths: ['/Test/']
        };
        spyOn(db, 'update').andCallThrough();
        return db.add(props, function(id) {
          var project;
          props._id = id;
          project = new Project(props);
          project.save();
          return expect(db.update).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvd2lsbGlhbS8uYXRvbS9wYWNrYWdlcy9wcm9qZWN0LW1hbmFnZXIvc3BlYy9wcm9qZWN0LXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLGtCQUFBOztBQUFBLEVBQUEsT0FBQSxHQUFVLE9BQUEsQ0FBUSxnQkFBUixDQUFWLENBQUE7O0FBQUEsRUFDQSxLQUFBLEdBQVEsT0FBQSxDQUFRLFNBQVIsQ0FEUixDQUFBOztBQUFBLEVBRUEsRUFBQSxHQUFLLE9BQUEsQ0FBUSxXQUFSLENBRkwsQ0FBQTs7QUFBQSxFQUdBLEVBQUUsQ0FBQyxjQUFILENBQWtCLEtBQUssQ0FBQyxNQUFOLENBQUEsQ0FBbEIsQ0FIQSxDQUFBOztBQUFBLEVBS0EsUUFBQSxDQUFTLFNBQVQsRUFBb0IsU0FBQSxHQUFBO0FBRWxCLElBQUEsVUFBQSxDQUFXLFNBQUEsR0FBQSxDQUFYLENBQUEsQ0FBQTtBQUFBLElBRUEsRUFBQSxDQUFHLDZCQUFILEVBQWtDLFNBQUEsR0FBQTtBQUNoQyxVQUFBLG1CQUFBO0FBQUEsTUFBQSxVQUFBLEdBQ0U7QUFBQSxRQUFBLEtBQUEsRUFBTyxNQUFQO0FBQUEsUUFDQSxLQUFBLEVBQU8sQ0FBQyxTQUFELENBRFA7T0FERixDQUFBO0FBQUEsTUFHQSxPQUFBLEdBQWMsSUFBQSxPQUFBLENBQVEsVUFBUixDQUhkLENBQUE7YUFLQSxNQUFBLENBQU8sT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFyQixDQUEwQixDQUFDLElBQTNCLENBQWdDLG9CQUFoQyxFQU5nQztJQUFBLENBQWxDLENBRkEsQ0FBQTtBQUFBLElBVUEsRUFBQSxDQUFHLDZDQUFILEVBQWtELFNBQUEsR0FBQTtBQUNoRCxVQUFBLG1CQUFBO0FBQUEsTUFBQSxVQUFBLEdBQ0U7QUFBQSxRQUFBLEtBQUEsRUFBTyxNQUFQO09BREYs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

//# sourceURL=/home/william/.atom/packages/project-manager/spec/project-spec.coffee
